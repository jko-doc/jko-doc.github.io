"use strict";(self.webpackChunkjko_doc=self.webpackChunkjko_doc||[]).push([[546],{8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>c});var r=n(6540);const t={},s=r.createContext(t);function o(e){const i=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:i},e.children)}},9296:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"usage/declarative/grouping","title":"grouping","description":"How to group scripts that share the same definition?","source":"@site/docs/usage/declarative/grouping.md","sourceDirName":"usage/declarative","slug":"/usage/declarative/grouping","permalink":"/usage/declarative/grouping","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"hide_title":true,"sidebar_label":"Grouping Scripts Definition","sidebar_position":6,"description":"How to group scripts that share the same definition?","keywords":["grouping scripts"]},"sidebar":"tutorialSidebar","previous":{"title":"Nesting","permalink":"/usage/declarative/nesting"},"next":{"title":"JSON-Only","permalink":"/usage/declarative/json"}}');var t=n(4848),s=n(8453);const o={hide_title:!0,sidebar_label:"Grouping Scripts Definition",sidebar_position:6,description:"How to group scripts that share the same definition?",keywords:["grouping scripts"]},c=void 0,a={},d=[{value:"Grouping Scripts Definition",id:"grouping-scripts-definition",level:2}];function p(e){const i={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"grouping-scripts-definition",children:"Grouping Scripts Definition"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"jko"})," also defines the ",(0,t.jsx)(i.code,{children:"|"})," operator, which allows grouping scripts elements that share the same definition."]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["The ",(0,t.jsxs)(i.strong,{children:[(0,t.jsx)(i.code,{children:"|"})," operator"]})," separates multiple script names."]}),"\n",(0,t.jsxs)(i.li,{children:["All grouped scripts share the same command, e.g. ",(0,t.jsx)(i.code,{children:'"someCommand"'}),"."]}),"\n",(0,t.jsx)(i.li,{children:"This simplifies script management by reducing redundancy."}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-javascript",children:'export default {\n  scripts: {\n    "yourScript1 | yourScript2 | yourScript3": "someCommand"\n  }\n}\n'})}),"\n",(0,t.jsxs)(i.p,{children:["This can be used even with ",(0,t.jsx)(i.strong,{children:(0,t.jsx)(i.code,{children:"jko"})})," directives, which can be combined:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-javascript",children:' "$directiveName1 (scriptName1) | $directiveNameN (scriptNameN)": "value"\n'})}),"\n",(0,t.jsx)(i.p,{children:"e.g."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-javascript",children:'export default {\n  scripts: {\n    "$disable (yourScript1) | yourScript2 | $pre(yourScript3)": "someCommand"\n    "$pre(yourScript1) | $post(yourScript2) | yourScript3": "someCommand2"\n    "$comment(yourScript1) | $comment(yourScript2) | $comment(yourScript3)": "This script will ..."\n  }\n}\n'})}),"\n",(0,t.jsx)(i.admonition,{type:"danger",children:(0,t.jsxs)(i.p,{children:["Directives are apply to a single script, meaning ",(0,t.jsx)(i.code,{children:"|"})," cannot be used within them."]})})]})}function l(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);