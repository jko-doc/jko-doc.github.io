"use strict";(self.webpackChunkscripts_js=self.webpackChunkscripts_js||[]).push([[567],{5226:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/","docId":"intro","unlisted":false},{"type":"link","label":"Quick start","href":"/quick","docId":"quick","unlisted":false},{"type":"category","label":"Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"jko.js","href":"/usage/jkojs","docId":"usage/jkojs","unlisted":false},{"type":"link","label":"Run Scripts","href":"/usage/run-script","docId":"usage/run-script","unlisted":false},{"type":"category","label":"Function Scripts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function Scripts","href":"/usage/functions/run-function-script","docId":"usage/functions/run-function-script","unlisted":false},{"type":"link","label":"Chaining Function Scripts","href":"/usage/functions/chaining-function-script","docId":"usage/functions/chaining-function-script","unlisted":false}],"description":"With jko, you can easily create and execute Function scripts","href":"/category/function-scripts"},{"type":"link","label":"Environment","href":"/usage/environment","docId":"usage/environment","unlisted":false},{"type":"link","label":"Install dependencies","href":"/usage/install","docId":"usage/install","unlisted":false},{"type":"link","label":"Split Definitions","href":"/usage/split","docId":"usage/split","unlisted":false},{"type":"category","label":"Declarative Syntax","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/usage/declarative/intro","docId":"usage/declarative/intro","unlisted":false},{"type":"category","label":"Script Definition","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"$pre, $post, $catch","href":"/usage/declarative/script/lifecycle","docId":"usage/declarative/script/lifecycle","unlisted":false},{"type":"link","label":"$disable","href":"/usage/declarative/script/disable","docId":"usage/declarative/script/disable","unlisted":false},{"type":"link","label":"$comment","href":"/usage/declarative/script/comment","docId":"usage/declarative/script/comment","unlisted":false},{"type":"link","label":"Grouping Scripts Definition","href":"/usage/declarative/script/grouping","docId":"usage/declarative/script/grouping","unlisted":false}],"description":"Directives to Enhance Your Scripts","href":"/category/script-definition"},{"type":"link","label":"JSON-Only Syntax","href":"/usage/declarative/json","docId":"usage/declarative/json","unlisted":false}],"description":"Understanding Declarative jko Syntax","href":"/category/declarative-syntax"},{"type":"link","label":"Options","href":"/usage/options","docId":"usage/options","unlisted":false},{"type":"link","label":"CLI Options","href":"/usage/cli","docId":"usage/cli","unlisted":false}],"href":"/category/usage"},{"type":"link","label":"Summary","href":"/summary","docId":"summary","unlisted":false},{"type":"link","label":"Info & Roadmap","href":"/info","docId":"info","unlisted":false}]},"docs":{"info":{"id":"info","title":"Information and Roadmap","description":"jko was born out of the need to organize and share scripts and dependencies between projects\u2014a gap that, after some research, I found was left for external tools by the npm team about 10 years ago, rather than being integrated directly into package.json (I believe a solution like allowing a package.js, as eslint does, would have been preferable). As development progressed, it evolved into a tool for automating tasks as well. I hope it proves to be highly useful for everyone.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"j\u2022ko is a tool for executing scripts, with the ability to extend scripts and dependencies from other files.","sidebar":"tutorialSidebar"},"quick":{"id":"quick","title":"quick","description":"Quick start","sidebar":"tutorialSidebar"},"summary":{"id":"summary","title":"Summary","description":"jko was designed to streamline project management by organizing and sharing scripts and dependencies across projects, leveraging JavaScript\u2019s dynamic capabilities to import files. This modular approach enables you to build complex dependency trees and automate tasks with ease. It provides a structured and declarative way to manage scripts, and automation workflows. Whether you need to streamline your project\u2019s workflow, integrate community-driven enhancements, or simply automate routine tasks, this CLI system adapts to your needs while providing a robust foundation for scalable development.","sidebar":"tutorialSidebar"},"usage/cli":{"id":"usage/cli","title":"CLI Options","description":"jko provides a set of options that allow you to configure the process\'s input and output, including:","sidebar":"tutorialSidebar"},"usage/declarative/intro":{"id":"usage/declarative/intro","title":"Introduction","description":"General Review of jko Declarative Syntax","sidebar":"tutorialSidebar"},"usage/declarative/json":{"id":"usage/declarative/json","title":"JSON-only directives","description":"Directives when using JSON","sidebar":"tutorialSidebar"},"usage/declarative/script/comment":{"id":"usage/declarative/script/comment","title":"$comment","description":"How to add a comment to script?","sidebar":"tutorialSidebar"},"usage/declarative/script/disable":{"id":"usage/declarative/script/disable","title":"$disable","description":"How to disable a script from execution?","sidebar":"tutorialSidebar"},"usage/declarative/script/grouping":{"id":"usage/declarative/script/grouping","title":"Grouping Scripts Definition","description":"How to group scripts that share the same definition?","sidebar":"tutorialSidebar"},"usage/declarative/script/lifecycle":{"id":"usage/declarative/script/lifecycle","title":"Lifecycle hooks","description":"How to set lifecycle hooks for a script?","sidebar":"tutorialSidebar"},"usage/environment":{"id":"usage/environment","title":"Environment","description":"With each execution, jko creates an Independent environment\u2014an entirely new instance that derives from either the system environment or the parent process environment.","sidebar":"tutorialSidebar"},"usage/functions/chaining-function-script":{"id":"usage/functions/chaining-function-script","title":"Chaining Function Scripts","description":"Steps to Chain Function Scripts","sidebar":"tutorialSidebar"},"usage/functions/run-function-script":{"id":"usage/functions/run-function-script","title":"Function Scripts","description":"Basics of Function Scripts Usage","sidebar":"tutorialSidebar"},"usage/install":{"id":"usage/install","title":"Install dependencies","description":"jko allows you to install dependencies and devDependencies.","sidebar":"tutorialSidebar"},"usage/jkojs":{"id":"usage/jkojs","title":"jko.js","description":"jko.js defines the ecosystem for running tasks.","sidebar":"tutorialSidebar"},"usage/options":{"id":"usage/options","title":"Managing Global Options","description":"envFile, logLevel","sidebar":"tutorialSidebar"},"usage/run-script":{"id":"usage/run-script","title":"Run Scripts","description":"Using the jko, you can execute any standard script defined in jko.js, package.json or in any other file.","sidebar":"tutorialSidebar"},"usage/split":{"id":"usage/split","title":"What about splitting scripts and dependencies","description":"What about splitting `scripts` and `dependencies`?","sidebar":"tutorialSidebar"}}}}')}}]);