"use strict";(self.webpackChunkscripts_js=self.webpackChunkscripts_js||[]).push([[990],{6027:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"usage/declarative/script/grouping","title":"Grouping Scripts Definition","description":"How to group scripts that share the same definition?","source":"@site/docs/usage/declarative/script/grouping.md","sourceDirName":"usage/declarative/script","slug":"/usage/declarative/script/grouping","permalink":"/usage/declarative/script/grouping","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_label":"Grouping Scripts Definition","sidebar_position":4,"description":"How to group scripts that share the same definition?","keywords":["grouping scripts"]},"sidebar":"tutorialSidebar","previous":{"title":"$comment","permalink":"/usage/declarative/script/comment"},"next":{"title":"JSON-Only Syntax","permalink":"/usage/declarative/json"}}');var s=n(4848),t=n(8453);const c={sidebar_label:"Grouping Scripts Definition",sidebar_position:4,description:"How to group scripts that share the same definition?",keywords:["grouping scripts"]},o="Grouping Scripts Definition",a={},d=[];function p(e){const i={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"grouping-scripts-definition",children:"Grouping Scripts Definition"})}),"\n",(0,s.jsxs)(i.p,{children:["To group scripts in the CLI, use the ",(0,s.jsxs)(i.strong,{children:[(0,s.jsx)(i.code,{children:"|"})," operator"]}),", which allows multiple ",(0,s.jsx)(i.code,{children:"scripts"})," elements to share the same definition."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["The ",(0,s.jsxs)(i.strong,{children:[(0,s.jsx)(i.code,{children:"|"})," operator"]})," separates multiple script names."]}),"\n",(0,s.jsxs)(i.li,{children:["All grouped scripts share the same command, e.g. ",(0,s.jsx)(i.code,{children:'"someCommand"'}),"."]}),"\n",(0,s.jsx)(i.li,{children:"This simplifies script management by reducing redundancy."}),"\n"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:'export default {\n  scripts: {\n    "yourScript1 | yourScript2 | yourScript3": "someCommand"\n  }\n}\n'})}),"\n",(0,s.jsxs)(i.p,{children:["This can be used even with ",(0,s.jsx)(i.strong,{children:(0,s.jsx)(i.code,{children:"jko"})})," directives, which can be combined."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:'export default {\n  scripts: {\n    "$disable (yourScript1) | yourScript2 | $before(yourScript3)": "someCommand"\n    "$after(yourScript2) | yourScript3": "someCommand2"\n    "$comment(yourScript1 | yourScript2 | yourScript3)": "This script will ..."\n  }\n}\n'})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"$pre"}),", ",(0,s.jsx)(i.code,{children:"$post"}),", ",(0,s.jsx)(i.code,{children:"$catch"}),", and ",(0,s.jsx)(i.code,{children:"$disable"})," apply to a single script, meaning ",(0,s.jsx)(i.code,{children:"|"})," cannot be used within them."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"$comment"})," can apply to one or more scripts, meaning ",(0,s.jsx)(i.code,{children:"|"})," can be used within it."]}),"\n"]})]})}function l(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>o});var r=n(6540);const s={},t=r.createContext(s);function c(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);