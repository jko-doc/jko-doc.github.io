"use strict";(self.webpackChunkjko_doc=self.webpackChunkjko_doc||[]).push([[181],{3585:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"usage/declarative/json","title":"JSON-Only","description":"Directives when using JSON","source":"@site/docs/usage/declarative/json.md","sourceDirName":"usage/declarative","slug":"/usage/declarative/json","permalink":"/usage/declarative/json","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"title":"JSON-Only","sidebar_label":"JSON-Only","sidebar_position":7,"description":"Directives when using JSON","keywords":["json","$extends","$installs"]},"sidebar":"tutorialSidebar","previous":{"title":"Grouping Scripts Definition","permalink":"/usage/declarative/grouping"},"next":{"title":"Options","permalink":"/usage/options"}}');var t=s(4848),r=s(8453);const l={title:"JSON-Only",sidebar_label:"JSON-Only",sidebar_position:7,description:"Directives when using JSON",keywords:["json","$extends","$installs"]},c="JSON-only directives",o={},a=[{value:"<code>$extends</code>",id:"extends",level:2},{value:"<code>$installs</code>",id:"installs",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"json-only-directives",children:"JSON-only directives"})}),"\n",(0,t.jsxs)(n.p,{children:["If you want to use a JSON file, such as ",(0,t.jsx)(n.code,{children:"package.json"}),", ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"jko"})})," provides JSON-only directives\u2014",(0,t.jsx)(n.code,{children:"$extends"})," and ",(0,t.jsx)(n.code,{children:"$installs"}),"\u2014in addition to the script directives. Essentially, these directives ensure compatibility by allowing definitions from alternative sources to be used."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"JSON-only Configuration"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"$extends"})})," \u2013 Enables extending scripts from external sources."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"$installs"})})," \u2013 Defines dependencies that should be installed automatically."]}),"\n"]}),"\n",(0,t.jsx)("u",{children:"Using JSON-only Configuration Directives"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:' "$directiveName": "value"\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsxs)(n.p,{children:["They are exclusively available when using ",(0,t.jsx)(n.code,{children:".json"})," file."]}),(0,t.jsxs)(n.p,{children:["While these are provided for compatibility purposes, it is recommended to use ",(0,t.jsx)(n.code,{children:"jko.js"})," instead."]})]}),"\n",(0,t.jsx)(n.h2,{id:"extends",children:(0,t.jsx)(n.code,{children:"$extends"})}),"\n",(0,t.jsxs)(n.p,{children:["To extend scripts in JSON, use the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"$extends"})})," directive, which allows you to inherit scripts from an external source."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "$extends": "./path/to/script.js"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The external file contains predefined scripts that will be incorporated into the current configuration."}),"\n",(0,t.jsxs)(n.li,{children:["This ensures ",(0,t.jsx)(n.strong,{children:"reusability"})," and ",(0,t.jsx)(n.strong,{children:"modular script management"})," across multiple configurations."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"File can be any .js, .mjs, .cjs or .json file."})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["The file path must start with ",(0,t.jsx)(n.code,{children:"/"}),", ",(0,t.jsx)(n.code,{children:"./"}),", or ",(0,t.jsx)(n.code,{children:"../"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"To extend from a package:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "$extends": "somePackageName"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"The package must be available, i.e. it must be installed first."})}),"\n",(0,t.jsxs)(n.admonition,{type:"danger",children:[(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.code,{children:"jko"})," is installed globally, only global packages will be available."]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Solutions:"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use a locally installed version of ",(0,t.jsx)(n.code,{children:"jko"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"jko.js"}),", a custom JavaScript configuration file, or a ",(0,t.jsxs)(n.a,{href:"../install#mixing-jkojs-and-json",children:["combination of ",(0,t.jsx)(n.code,{children:".js"})," and ",(0,t.jsx)(n.code,{children:".json"})," configuration files"]}),"."]}),"\n"]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"installs",children:(0,t.jsx)(n.code,{children:"$installs"})}),"\n",(0,t.jsxs)(n.p,{children:["To set dependencies from an external source, use the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"$installs"})})," directive within the ",(0,t.jsx)(n.code,{children:"scripts"})," object. This directive allows you to specify the file or package that contains the dependency definitions."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "$installs" : "./some/path/dependencies.js",\n  }\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"File can be any .js, .mjs, .cjs or .json file."})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["The file path must start with ",(0,t.jsx)(n.code,{children:"/"}),", ",(0,t.jsx)(n.code,{children:"./"}),", or ",(0,t.jsx)(n.code,{children:"../"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"To use a package:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "$installs" : "somePackageName",\n  }\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"The package must be available, i.e. it must be installed first."})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["For the specified ",(0,t.jsx)(n.code,{children:"$installs"}),", only ",(0,t.jsx)(n.code,{children:"dependencies"})," and ",(0,t.jsx)(n.code,{children:"devDependencies"})," are parsed for installation; the ",(0,t.jsx)(n.code,{children:"packageManager"})," setting is ignored. If you require a package manager other than the default, please use ",(0,t.jsx)(n.a,{href:"../install#using-a-specific-package-manager-to-install-dependencies",children:"alternative configuration methods"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);