"use strict";(self.webpackChunkscripts_js=self.webpackChunkscripts_js||[]).push([[357],{1713:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"usage/functions/run-function-script","title":"Function Scripts","description":"Basics of Function Scripts Usage","source":"@site/docs/usage/functions/run-function-script.mdx","sourceDirName":"usage/functions","slug":"/usage/functions/run-function-script","permalink":"/usage/functions/run-function-script","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"description":"Basics of Function Scripts Usage","keywords":["function scripts"]},"sidebar":"tutorialSidebar","previous":{"title":"Function Scripts","permalink":"/category/function-scripts"},"next":{"title":"Chaining Function Scripts","permalink":"/usage/functions/chaining-function-script"}}');var c=s(4848),r=s(8453),t=s(8070),o=s(6502);const a={sidebar_position:1,description:"Basics of Function Scripts Usage",keywords:["function scripts"]},l="Function Scripts",d={},p=[{value:"Run a Function Script",id:"run-a-function-script",level:2},{value:"Run a Function Script with Arguments",id:"run-a-function-script-with-arguments",level:2}];function h(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.header,{children:(0,c.jsx)(e.h1,{id:"function-scripts",children:"Function Scripts"})}),"\n",(0,c.jsxs)(e.p,{children:["Apart from standard scripts, ",(0,c.jsx)(e.strong,{children:(0,c.jsx)(e.code,{children:"jko"})})," allows the execution of functions defined in JavaScript files."]}),"\n",(0,c.jsx)(e.hr,{}),"\n",(0,c.jsx)(e.h2,{id:"run-a-function-script",children:"Run a Function Script"}),"\n",(0,c.jsxs)(e.p,{children:["Given the following ",(0,c.jsx)(e.code,{children:"jko.js"}),":"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-javascript",children:"  export default {\n    scripts: {\n      functionScript: function () {\n        // do something\n      }\n    }\n  }\n"})}),"\n",(0,c.jsx)(t.A,{scriptName:"functionScript"}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.code,{children:"functionScript"})," will be executed."]}),"\n",(0,c.jsxs)(e.admonition,{type:"tip",children:[(0,c.jsx)(e.p,{children:'When scripts are listed, no useful description is displayed beyond the default "Function" label.'}),(0,c.jsx)(o.A,{children:(0,c.jsxs)(e.p,{children:["$ jko\n",(0,c.jsx)("span",{style:{color:"#dbcd0f",textDecorationThickness:"1px",textDecorationLine:"underline"},children:"scripts:"}),"\n",(0,c.jsxs)("span",{children:["  ",(0,c.jsx)("span",{style:{fontWeight:"900"},children:"functionScript"}),": Function"]})]})}),(0,c.jsxs)(e.p,{children:["Use the ",(0,c.jsx)(e.code,{children:"$comment"})," directive to add a descriptive comment."]}),(0,c.jsx)(e.p,{children:"e.g."}),(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-js",children:"  export default {\n    scripts: {\n      functionScript: function (param1, paramN) {\n        // do something\n      }\n      '$comment (functionScript)': 'This function script that ...'\n    }\n  }\n"})}),(0,c.jsx)(o.A,{children:(0,c.jsxs)(e.p,{children:["$ jko\n",(0,c.jsx)("span",{style:{color:"#dbcd0f",textDecorationThickness:"1px",textDecorationLine:"underline"},children:"scripts:"}),"\n",(0,c.jsxs)("span",{children:["  ",(0,c.jsx)("span",{style:{fontWeight:"900"},children:"functionScript"}),": Function"]}),"\n",(0,c.jsx)("span",{style:{fontWeight:"900",opacity:.5},children:"    This function script that ..."})]})})]}),"\n",(0,c.jsx)(e.hr,{}),"\n",(0,c.jsx)(e.h2,{id:"run-a-function-script-with-arguments",children:"Run a Function Script with Arguments"}),"\n",(0,c.jsxs)(e.p,{children:["Given the following ",(0,c.jsx)(e.code,{children:"jko.js"}),":"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-js",children:"  export default {\n    scripts: {\n      functionScript: function (param1, paramN) {\n        // do something\n      }\n    }\n  }\n"})}),"\n",(0,c.jsx)(t.A,{scriptName:"functionScript",args:["arg1","argN"]}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:(0,c.jsx)(e.code,{children:"jko"})})," will run ",(0,c.jsx)(e.code,{children:"functionScript"})," with ",(0,c.jsx)(e.code,{children:"arg1"})," and ",(0,c.jsx)(e.code,{children:"argN"})," as arguments to the function; that is, ",(0,c.jsx)(e.code,{children:"param1"})," will receive the value of ",(0,c.jsx)(e.code,{children:"arg1"})," and ",(0,c.jsx)(e.code,{children:"paramN"})," will receive the value of ",(0,c.jsx)(e.code,{children:"argN"}),"."]}),"\n",(0,c.jsx)(e.p,{children:"For example:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-javascript",children:"  export default {\n    scripts: {\n      functionScript: function (param1, paramN) {\n        const a = parseFloat(param1)\n        const b = parseFloat(paramN)\n        console.log(`${a} + ${b} = ${a + b}`)\n      }\n    }\n  }\n"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-powershell",children:"$ jko functionScript 1 2\n$ 1 + 2 = 3\n"})}),"\n",(0,c.jsxs)("p",{class:"small",children:["(Actually, the output will be longer, but it has been simplified to emphasize functionality over presentation. To get the exact same output as in the example, use the following command: ",(0,c.jsx)(e.code,{children:"jko -l=e functionScript 1 2"}),")"]}),"\n",(0,c.jsxs)(e.p,{children:["Additionally, ",(0,c.jsx)(e.strong,{children:(0,c.jsx)(e.code,{children:"jko"})})," will set an environment variable for every argument passed in the command line, each named ",(0,c.jsx)(e.code,{children:"jko_arg_#"})," and accessible in the function code through ",(0,c.jsx)(e.code,{children:"process.env.jko_arg_#"}),"."]}),"\n",(0,c.jsx)(e.p,{children:"For example:"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-javascript",children:"  export default {\n    scripts: {\n      functionScript: function () {\n        const a = parseFloat(process.env.jko_arg_0)\n        const b = parseFloat(process.env.jko_arg_1)\n        console.log(`${a} + ${b} = ${a + b}`)\n      }\n    }\n  }\n"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-powershell",children:"$ jko functionScript 1 2\n$ 1 + 2 = 3\n"})}),"\n",(0,c.jsxs)("p",{class:"small",children:["(Actually, the output will be longer, but it has been simplified to emphasize functionality over presentation. To get the exact same output as in the example, use the following command: ",(0,c.jsx)(e.code,{children:"jko -l=e functionScript 1 2"}),")"]}),"\n",(0,c.jsx)(e.admonition,{type:"info",children:(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:(0,c.jsx)(e.code,{children:"jko"})})," will create an environment variable for each argument passed in the command line, named ",(0,c.jsx)(e.code,{children:"jko_arg_#"}),", where ",(0,c.jsx)(e.code,{children:"#"})," starts at ",(0,c.jsx)(e.code,{children:"0"}),".\n",(0,c.jsx)("br",{}),"For example, ",(0,c.jsx)(e.code,{children:"jko_arg_0"})," will contain the value of the first argument, and ",(0,c.jsx)(e.code,{children:"jko_arg_N_1"})," will contain the value of the last argument.\n",(0,c.jsx)("br",{}),(0,c.jsx)(e.code,{children:"arg1"})," saved in ",(0,c.jsx)(e.code,{children:"jko_arg_0"}),"\n",(0,c.jsx)("br",{}),(0,c.jsx)(e.code,{children:"arg2"})," saved in ",(0,c.jsx)(e.code,{children:"jko_arg_1"}),"\n",(0,c.jsx)("br",{}),(0,c.jsx)(e.code,{children:"arg3"})," saved in ",(0,c.jsx)(e.code,{children:"jko_arg_2"}),"\n",(0,c.jsx)("br",{}),"...and so on."]})}),"\n",(0,c.jsx)(e.hr,{})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(h,{...n})}):h(n)}},6502:(n,e,s)=>{s.d(e,{A:()=>c});var i=s(4848);function c(n){return(0,i.jsx)("pre",{tabIndex:0,className:"jko-code prism-code language-powershell thin-scrollbar",children:(0,i.jsx)("code",{children:n.children})})}},8070:(n,e,s)=>{s.d(e,{A:()=>c});var i=s(4848);function c(n){return(0,i.jsx)("pre",{tabIndex:0,className:"jko-code prism-code language-powershell thin-scrollbar",children:(0,i.jsxs)("code",{children:[(0,i.jsx)("span",{className:"jko-cli-symbol",children:"$"}),"\xa0",(0,i.jsx)("span",{className:"jko-cli",children:"jko"}),"\xa0",n.options&&n.options.map((n=>"separator"!==n?(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("span",{className:"jko-cli-option-operator",children:n.prefix}),(0,i.jsx)("span",{className:"jko-cli-option-name",children:n.name}),n.value&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("span",{className:"jko-cli-option-operator",children:"="}),(0,i.jsx)("span",{className:"jko-cli-option-value",children:n.value})]}),"\xa0"]}):(0,i.jsx)("span",{className:"jko-cli-option-separator",children:"...\xa0"}))),n.scriptName&&(0,i.jsxs)("span",{className:"jko-cli-script",children:[n.scriptName,"\xa0"]}),n.args&&("string"!=typeof n.args?n.args.map((n=>"separator"!==n?(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("span",{className:"jko-cli-arg",children:n}),"\xa0"]}):(0,i.jsx)("span",{className:"jko-cli-option-separator",children:"...\xa0"}))):(0,i.jsxs)("span",{className:"jko-cli-arg",children:[n.args,"\xa0"]}))]})})}},8453:(n,e,s)=>{s.d(e,{R:()=>t,x:()=>o});var i=s(6540);const c={},r=i.createContext(c);function t(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:t(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);